#!/usr/bin/python
# update time spent for all tasks
# thomasballinger@gmail.com

import os, sys, optparse
import datetime

import calendarHours as hours
import spreadsheetTask as task
from pprint import pprint

def updateHours():
    taskList = task.createTasks()
    for t in taskList:
        print 'updating',t.name,t.timespent,
        t.timespent = hours.getHoursWorked(t.id)
        print 'to',t.timespent 
        t.put()

def datetimeToHoursString(dt):
    s = dt.days * 24 * 3600 + dt.seconds
    h = s / 3600
    return '%d.1' % h + ' hours'

dToh = datetimeToHoursString

def showWeek(updateAllHours=False):
    ds1 = '2010-07-05'
    ds2 = '2010-07-12'
    if updateAllHours:
        updateHours()
    taskList = task.createTasks()
    totalHours = datetime.timedelta(0)
    for t in taskList:
        t.weekHours = hours.getWeekHours(t.id, ds1, ds2)
        totalHours += t.weekHours
    weekList = [x for x in taskList if x.weekHours > datetime.timedelta(0)]
    assigners = {}
    for t in weekList:
        if not t.assigner in assigners:
            assigners[t.assigner] = t.weekHours
        else:
            assigners[t.assigner] += t.weekHours
   
    assigners = zip(assigners.keys(), assigners.values())
    assigners.sort(key=lambda x: -x[1])
    weekList.sort(key=lambda t: t.assigner)
    
    print dToh(totalHours), 'worked this week'
    print 'tasks for week', ds1, 'to', ds2
    for (assigner, assignerHours) in assigners:
        print '  ', assignerHours, assigner
        assignerTasks = [t for t in weekList if t.assigner == assigner] 
        assignerTasks.sort(key=lambda t: -t.weekHours)
        for t in assignerTasks:
            print '    ', t.weekHours, t.name
    
if __name__ == '__main__':
    showWeek()
